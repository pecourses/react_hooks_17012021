[{"/home/pecourses/VSProjs/react-hooks/src/index.js":"1","/home/pecourses/VSProjs/react-hooks/src/App.js":"2","/home/pecourses/VSProjs/react-hooks/src/reportWebVitals.js":"3","/home/pecourses/VSProjs/react-hooks/src/components/Counter/index.jsx":"4","/home/pecourses/VSProjs/react-hooks/src/components/Stopwatch/index.jsx":"5","/home/pecourses/VSProjs/react-hooks/src/components/Chat/index.jsx":"6","/home/pecourses/VSProjs/react-hooks/src/components/Chat/reducer.jsx":"7"},{"size":500,"mtime":1610892299420,"results":"8","hashOfConfig":"9"},{"size":305,"mtime":1610898763726,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1610892299420,"results":"11","hashOfConfig":"9"},{"size":860,"mtime":1610893872770,"results":"12","hashOfConfig":"9"},{"size":933,"mtime":1610896648096,"results":"13","hashOfConfig":"9"},{"size":1069,"mtime":1610897690338,"results":"14","hashOfConfig":"9"},{"size":854,"mtime":1610898637397,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xqjac9",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pecourses/VSProjs/react-hooks/src/index.js",[],"/home/pecourses/VSProjs/react-hooks/src/App.js",["33","34","35"],"/home/pecourses/VSProjs/react-hooks/src/reportWebVitals.js",[],"/home/pecourses/VSProjs/react-hooks/src/components/Counter/index.jsx",[],["36","37"],"/home/pecourses/VSProjs/react-hooks/src/components/Stopwatch/index.jsx",["38"],"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {startOfDay, format, addSeconds} from 'date-fns';\nimport stopwatchstyle from './Stopwatch.module.css';\n\nfunction Stopwatch(){\n  const [time, setTime] = useState(startOfDay(new Date()));\n  const [isRunning, setIsRunning] = useState(false);\n  \n  useEffect(()=> {\n    if(isRunning){\n      const idValue = setTimeout(() => {\n        setTime(addSeconds(time,1));\n      }, 1000);\n      return()=>{\n        clearTimeout(idValue);\n      };\n    }\n  }, [isRunning, time]);\n\n  return(\n    <article className={stopwatchstyle.wrapper}>\n    <h1 className={stopwatchstyle.time}>{format(time, 'HH:mm:ss')}</h1>\n    <button onClick={() => {setIsRunning(!isRunning);}}>\n      {isRunning ? 'stop': 'start'}\n    </button>\n    <button onClick={()=>{setTime(startOfDay(new Date()));}}>\n      reset\n    </button>\n    </article>\n  );\n}\n\nexport default Stopwatch;","/home/pecourses/VSProjs/react-hooks/src/components/Chat/index.jsx",["39","40"],"import React, { useState, useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport reducer from './reducer';\n\nconst data = {\n  users: [\n    {\n      id: 1,\n      name: 'Tom Fox',\n    },\n    {\n      id: 2,\n      name: 'John Smith',\n    },\n    {\n      id: 3,\n      name: 'Ivan Inanov',\n    },\n  ],\n  messages: [\n    {\n      userId: 1,\n      body: 'some text',\n    },\n    {\n      userId: 2,\n      body: 'some text',\n    },\n    {\n      userId: 1,\n      body: 'some text',\n    },\n    {\n      userId: 1,\n      body: 'some text',\n    },\n    {\n      userId: 2,\n      body: 'some text',\n    },\n  ],\n};\nconst getData = () => data;\n\nfunction Chat(props) {\n  const [state, dispatch] = useReducer(reducer,{\n    users: new Map(),\n    messages: [],\n  });\n\n  useEffect(() => {\n    const data = getData();\n    dispatch({\n      type: 'GET_SUCCESS',\n      data,\n    });\n  }, []);\n\n  const {messages} = state;\n  \n  return(\n    <ul>\n      {messages.map((i,index) => (\n        <li key={index}>{JSON.stringify(i)}</li>\n      ))}\n    </ul>\n  );  \n}\n\nexport default Chat;","/home/pecourses/VSProjs/react-hooks/src/components/Chat/reducer.jsx",[],{"ruleId":"41","severity":1,"message":"42","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":12},{"ruleId":"41","severity":1,"message":"45","line":3,"column":8,"nodeType":"43","messageId":"44","endLine":3,"endColumn":15},{"ruleId":"41","severity":1,"message":"46","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":17},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"41","severity":1,"message":"51","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":17},{"ruleId":"41","severity":1,"message":"52","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":25},{"ruleId":"41","severity":1,"message":"51","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":17},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Counter' is defined but never used.","'Stopwatch' is defined but never used.","no-native-reassign",["53"],"no-negated-in-lhs",["54"],"'PropTypes' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]